@model Bangazon.Models.ProductViewModels.ProductDetailViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>
<div>@await Component.InvokeAsync("UserProductOpinion", new {productId = Model.Product.ProductId})</div>
<div>
    <h4>Product</h4>
    <hr />
    <div class="row">
        <div class="col-sm-6">
            <dl class="row">
                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Product.DateCreated)
                </dt>
                <dd class="col-8">
                    @Html.DisplayFor(model => model.Product.DateCreated)
                </dd>
                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Product.Description)
                </dt>
                <dd class="col-8">
                    @Html.DisplayFor(model => model.Product.Description)
                </dd>
                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Product.Title)
                </dt>
                <dd class="col-8">
                    @Html.DisplayFor(model => model.Product.Title)
                </dd>
                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Product.Price)
                </dt>
                <dd class="col-8">
                    @Html.DisplayFor(model => model.Product.Price)
                </dd>
                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Product.Quantity)
                </dt>
                <dd class="col-8">
                    @Html.DisplayFor(model => model.Product.Quantity) @if (Model.User != null && Model.Product.UserId == Model.User.Id)
                    {<a style="margin-left: 1rem" asp-action="Edit" asp-route-id="@Model.Product.ProductId">Update Quantity</a>}
                </dd>
                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Product.City)
                </dt>
                <dd class="col-8">
                    @Html.DisplayFor(model => model.Product.City)
                </dd>
                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Product.Active)
                </dt>
                <dd class="col-8">
                    @Html.DisplayFor(model => model.Product.Active)
                </dd>
                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.User)
                </dt>
                <dd class="col-8">
                    @Html.DisplayFor(model => model.User.FullName)
                </dd>
                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Product.ProductType)
                </dt>
                <dd class="col-8">
                    @Html.DisplayFor(model => model.Product.ProductType.Label)
                </dd>
            </dl>
        </div>
        <div class="col-sm-6">
            <img src="@Url.Content(Model.Product.ImagePath)" class="img-fluid"/>
        </div>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
    <form style="margin-top: 1rem" asp-action="ProductToCart" asp-route-id="@Model.Product.ProductId">
        <input class="btn btn-primary" type="submit" value="Add To Cart" />
    </form>
</div>